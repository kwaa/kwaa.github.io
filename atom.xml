<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>./kwaa.dev</title>
  
  <subtitle>AB7575DD-9E94-B917-85CD-000D7FEBEAAE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kwaa.dev/"/>
  <updated>2021-01-15T17:56:33.938Z</updated>
  <id>https://kwaa.dev/</id>
  
  <author>
    <name>藍</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020 年终总结 &amp; 2021 的目标</title>
    <link href="https://kwaa.dev/p/2021/"/>
    <id>https://kwaa.dev/p/2021/</id>
    <published>2020-12-31T23:59:59.000Z</published>
    <updated>2021-01-15T17:56:33.938Z</updated>
    
    <content type="html"><![CDATA[<p>尽管这篇文章写于 2021 年初，我还是把时间设为了 2020 年底。<br>无论是否有人看，总结一下我今年都干了些什么吧。<a id="more"></a></p><h2 class="mdui-valign" id="败家"><span>败家&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#败家"><i class="mdui-icon material-icons">link</i></a></h2><p>手里钱多起来败的就比去年厉害一点，但还是勉强控制在了理性的范围内。</p><p>一月：</p><ul><li>GSC 初音未来 Memorial Dress Ver. 和她的盒子（仅定金），意料之中的延期了。￥378.20</li><li>超值跳水王 LG G7，预计用个一两年左右吧？￥721.00</li></ul><p>二月：</p><ul><li>Thin-ITX 服务器 <a href="https://kwaa.dev/p/s3rver/">S3RVER</a>，很满意。￥2441.32</li></ul><p>八月：</p><ul><li>REINDEE LUSION 拉链连帽卫衣 + WHYWORKS 武士裤 + Nike ACG Dog Mountain 登山鞋，高配一身黑。￥996.91</li></ul><p>十一月：</p><ul><li>欧乐B P9000 电动牙刷，一步到位。￥459.00</li></ul><h2 class="mdui-valign" id="作品"><span>作品&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#作品"><i class="mdui-icon material-icons">link</i></a></h2><ul><li><p><strong><a href="https://github.com/kwaa/m">Hexo Theme-M</a></strong><br>本博客现在用的主题。完成度… 勉勉强强，时间越往后我就越懒得更新了。</p></li><li><p><strong><a href="https://github.com/kwaa/naive.sh/tree/main">naive.sh</a></strong><br>安装并更新 naiveproxy 的脚本，但因为现在服务端整合到 forwardproxy fork 插件了所以并没有什么用。我以后可能会更新。</p></li><li><p><strong><a href="https://kwaa.dev/p/hexo-search/">Worker Search</a></strong><br>我很满意的一个小玩意，处理本博客的所有搜索。</p></li></ul><h2 class="mdui-valign" id="状态"><span>状态&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#状态"><i class="mdui-icon material-icons">link</i></a></h2><p>「人生を堕落に全部极振り」</p><h2 class="mdui-valign" id="2021-的目标"><span>2021 的目标&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#2021-的目标"><i class="mdui-icon material-icons">link</i></a></h2><ul><li>活着</li><li>赴日工作</li><li>日语 N3 甚至 N2</li></ul><p>真正的 Lunatic Mode 已经来了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尽管这篇文章写于 2021 年初，我还是把时间设为了 2020 年底。&lt;br&gt;
无论是否有人看，总结一下我今年都干了些什么吧。
    
    </summary>
    
    
      <category term="杂谈" scheme="https://kwaa.dev/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>本地和 CF Worker 的 Hexo 搜索引擎实践</title>
    <link href="https://kwaa.dev/p/hexo-search/"/>
    <id>https://kwaa.dev/p/hexo-search/</id>
    <published>2020-10-17T10:17:00.000Z</published>
    <updated>2020-10-26T15:55:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>Theme-M 最近进度不错，就打算把旧版的本地搜索移植过来再加个 Worker 搜索。<a id="more"></a></p><h2 class="mdui-valign" id="用-hexo-generator-search-生成索引"><span>用 hexo-generator-search 生成索引&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#用-hexo-generator-search-生成索引"><i class="mdui-icon material-icons">link</i></a></h2><p>剩下的内容都需要用到它。在 Hexo 目录下用 npm 安装：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-generator-search</code></pre><p>然后在站点配置文件 <code>_config.yml</code> 写入如下配置：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>    <span class="token key atrule">path</span><span class="token punctuation">:</span> search.json <span class="token comment"># 生成 JSON 文件</span>    <span class="token key atrule">content</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 包括文章内容</span></code></pre><p>执行一下 <code>hexo g</code>，public 目录里出现 search.json 就代表正常工作。</p><h2 class="mdui-valign" id="本地搜索"><span>本地搜索&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#本地搜索"><i class="mdui-icon material-icons">link</i></a></h2><p>还是那么些东西，但我真的很不想在自己的主题里放一个带一大串注释的 search.js，于是索性重新写了一份。<br>ES6+ 香到我直接不用 mdui.JQ 了。</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">onkeydown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>if (event.keyCode == 13) return false<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mdui-textfield mdui-m-b-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mdui-icon material-icons<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>search<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>local-input<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>q<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mdui-textfield-input<span class="token punctuation">"</span></span>        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= __(<span class="token punctuation">'</span>common.search<span class="token punctuation">'</span>) %><span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>local-result<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">min-height</span><span class="token punctuation">:</span>100vh<span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span> all .4s</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mdui-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;% if(theme.search.local.url) &#123; %>&lt;%- theme.search.local.url %>&lt;% &#125; else &#123; %>&lt;%- url_for('search.json') %>&lt;% &#125; %></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'local-input'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'local-input'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">let</span> keyword <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'local-input'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'local-result'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">''</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>keyword<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>                data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>title<span class="token punctuation">,</span> content<span class="token punctuation">,</span> url<span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">const</span> <span class="token function-variable function">append</span> <span class="token operator">=</span> <span class="token parameter">excerpt</span> <span class="token operator">=></span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'local-result'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span><span class="token string">'beforeend'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">                        &lt;a href=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> class="mdui-list-item mdui-ripple">                            &lt;div class="mdui-list-item-content">                                &lt;div class="mdui-list-item-title mdui-list-item-one-line"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>title<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>                                &lt;div class="mdui-list-item-text mdui-list-item-two-line"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>excerpt<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>                            &lt;/div>                        &lt;/a></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">append</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">append</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>完成。逻辑基本和原来差别不大，但 JS 只有不到 20 行。</p><h2 class="mdui-valign" id="Worker-搜索"><span>Worker 搜索&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Worker-搜索"><i class="mdui-icon material-icons">link</i></a></h2><p>灵感来自 <a href="https://blog.zcmimi.top/posts/cloudflare%20workers%E5%AE%9E%E7%8E%B0%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E5%85%A8%E7%AB%99%E6%90%9C%E7%B4%A2">cloudflare workers实现静态网站全站搜索 - zcmimi’s blog</a>，针对 Hexo 进行了重写。</p><p>后来想起来旧主题自己曾经写过一个 Google Custom Search JSON API (以下简称 google-json) 的模板，就有了一个想法：为什么我不能直接拿来用呢？</p><p>所以 Worker 后端的目标就是和 google-json 格式一致，并且能处理多个 Hexo 站点的搜索。</p><h3 class="mdui-valign" id="格式"><span>格式&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#格式"><i class="mdui-icon material-icons">link</i></a></h3><p>请求地址：</p><pre class="language-none"><code class="language-none">https:&#x2F;&#x2F;*.workers.dev&#x2F;?siteSearch&#x3D;站点&amp;q&#x3D;关键字</code></pre><p>返回 JSON：</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"items"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"标题1"</span><span class="token punctuation">,</span>            <span class="token property">"link"</span><span class="token operator">:</span> <span class="token string">"链接1"</span><span class="token punctuation">,</span>            <span class="token property">"snippet"</span><span class="token operator">:</span> <span class="token string">"描述1"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"标题2"</span><span class="token punctuation">,</span>            <span class="token property">"link"</span><span class="token operator">:</span> <span class="token string">"链接2"</span><span class="token punctuation">,</span>            <span class="token property">"snippet"</span><span class="token operator">:</span> <span class="token string">"描述2"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre><p>只需要这点内容。</p><h3 class="mdui-valign" id="index-js"><span>index.js&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#index-js"><i class="mdui-icon material-icons">link</i></a></h3><p>那么首先定义一下 json 文件常量和存储，<br>如果 URL 参数填写了 siteSearch 则直接使用，没有就用对象里第一个值。</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"kwaa.dev"</span><span class="token operator">:</span> <span class="token string">"https://kwaa.dev/search.json"</span><span class="token punctuation">,</span>    <span class="token string">"https://kwaa.dev"</span><span class="token operator">:</span> <span class="token string">"https://kwaa.dev/search.json"</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'fetch'</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span><span class="token function">handleRequest</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>定义 getdata 和 search 函数，搜索部分我直接把上面本地搜索部分移植了一下。</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getdata</span><span class="token punctuation">(</span><span class="token parameter">searchSite</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>searchSite<span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>        <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">json</span> <span class="token operator">=></span> data<span class="token punctuation">[</span>searchSite<span class="token punctuation">]</span> <span class="token operator">=</span> json<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">searchTerm<span class="token punctuation">,</span> searchSite</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    searchTerm <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">'"'</span> <span class="token operator">+</span> searchTerm<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'"'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">[</span>searchSite<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">await</span> <span class="token function">getdata</span><span class="token punctuation">(</span>searchSite<span class="token punctuation">)</span>    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">"items"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span>    data<span class="token punctuation">[</span>searchSite<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> title<span class="token punctuation">,</span> content<span class="token punctuation">,</span> url <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token string">"title"</span><span class="token operator">:</span> title<span class="token punctuation">,</span>            <span class="token string">"link"</span><span class="token operator">:</span> url<span class="token punctuation">,</span>            <span class="token string">"snippet"</span><span class="token operator">:</span> content        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>searchTerm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">push</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/&lt;[^>]+>/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>searchTerm<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>searchTerm<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>searchTerm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">push</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/&lt;[^>]+>/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>最后是 handleRequest：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> searchParams <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    <span class="token keyword">let</span> searchTerm <span class="token operator">=</span> searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchSite    <span class="token keyword">if</span> <span class="token punctuation">(</span>searchTerm <span class="token operator">==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token string">"usage:\n\        ?siteSearch=&lt;site>&amp;q=&lt;keyword>\n\        required: q"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> status<span class="token operator">:</span> <span class="token number">404</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'siteSearch'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        searchSite <span class="token operator">=</span> site<span class="token punctuation">[</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'siteSearch'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        searchSite <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>site<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">search</span><span class="token punctuation">(</span>searchTerm<span class="token punctuation">,</span> searchSite<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        status<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>        headers<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token string">'access-control-allow-origin'</span><span class="token operator">:</span> <span class="token string">'*'</span><span class="token punctuation">,</span>            <span class="token string">'access-control-allow-methods'</span><span class="token operator">:</span> <span class="token string">'GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS'</span><span class="token punctuation">,</span>            <span class="token string">'access-control-max-age'</span><span class="token operator">:</span> <span class="token string">'1728000'</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>在页面里显示结果：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>servlet<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">onsubmit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>return searchAPI(this.searchTerm.value);<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mdui-textfield mdui-m-b-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mdui-icon material-icons<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>search<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchTerm<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>q<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mdui-textfield-input<span class="token punctuation">"</span></span>        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= __(<span class="token punctuation">'</span>common.search<span class="token punctuation">'</span>) %><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>api-result<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">min-height</span><span class="token punctuation">:</span>100vh<span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span> all .4s</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mdui-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">searchAPI</span><span class="token punctuation">(</span><span class="token parameter">searchTerm</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://search.kwaa.workers.dev/?q=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>searchTerm<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;% if(theme.search.api.site !== false) &#123; %>&amp;siteSearch=&lt;% if(theme.search.api.site == '') &#123; %>&lt;%= config.root %>&lt;% &#125; else &#123; %>&lt;%= theme.search.api.site %>&lt;% &#125;&#125; if (theme.search.api.key &amp;&amp; theme.search.api.id) &#123; %>&amp;key=&lt;%= theme.search.api.key %>&amp;cx=&lt;%= theme.search.api.id %>&lt;% &#125; %></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">json</span> <span class="token operator">=></span> json<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>title<span class="token punctuation">,</span> link<span class="token punctuation">,</span> snippet<span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'api-result'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span><span class="token string">'beforeend'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">            &lt;a class="mdui-list-item mdui-ripple" href="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>link<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">">                &lt;div class="mdui-list-item-content">                    &lt;div class="mdui-list-item-title mdui-list-item-one-line"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>title<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>                    &lt;div class="mdui-list-item-text mdui-list-item-two-line"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>snippet<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>                &lt;/div>            &lt;/a></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>所以 Theme-M 可以直接使用 google-json 并修改 url 以支持 Worker 搜索引擎；其他适配 google-json 的 Hexo 主题也可以如此套用，真是太好了。<s>但是真的有 Hexo 主题适配这种玩意吗？</s></p><p>那么本文在这里结束，欢迎体验 Hexo Theme-M。<s>虽然还在更新，但 repo 已经很久不动了</s></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Theme-M 最近进度不错，就打算把旧版的本地搜索移植过来再加个 Worker 搜索。
    
    </summary>
    
    
      <category term="折腾" scheme="https://kwaa.dev/categories/%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="Hexo" scheme="https://kwaa.dev/tags/Hexo/"/>
    
      <category term="Theme-M" scheme="https://kwaa.dev/tags/Theme-M/"/>
    
  </entry>
  
  <entry>
    <title>Pleroma 安装笔记</title>
    <link href="https://kwaa.dev/p/pleroma/"/>
    <id>https://kwaa.dev/p/pleroma/</id>
    <published>2020-09-28T11:30:00.000Z</published>
    <updated>2020-09-28T23:57:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本来想搭建 Mastodon 的，但它配置要求较高——出于<s>省钱</s>节俭原则，我长期部署的网站基本都是零成本（不包括域名）。甲骨文提供的两台小鸡都是1C1G，怎么办呢？<br>这时我看到了 <a href="https://pleroma.social/">Pleroma</a>。<a id="more"></a></p><h2 class="mdui-valign" id="在开始之前"><span>在开始之前&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#在开始之前"><i class="mdui-icon material-icons">link</i></a></h2><ul><li>推荐阅读: <a href="https://blog.soykaf.com/post/what-is-pleroma/">What Is Pleroma?</a></li><li>本文使用 Debian testing (bullseye) amd64 系统的 root 账户进行操作，并已先行安装 caddy v2。</li><li>安装方式参考 <a href="https://docs-develop.pleroma.social/backend/installation/otp_en">Installing on Linux using OTP releases</a>。</li></ul><p>为什么我不用 Twitter? 这几年 Twitter 芝麻仁越来越多了，我希望有一块能让我自由发言且没有芝麻仁的净土。</p><p>首先按照惯例更新一下系统和安装软件包。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> full-upgrade <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">sudo</span> <span class="token function">curl</span> <span class="token function">unzip</span> libncurses5 postgresql postgresql-contrib</code></pre><h2 class="mdui-valign" id="安装-Pleroma"><span>安装 Pleroma&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#安装-Pleroma"><i class="mdui-icon material-icons">link</i></a></h2><p>添加新用户：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -r -s /bin/false -m -d /opt/pleroma -U pleroma</code></pre><p>下载并安装：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> -p /opt/pleroma <span class="token operator">&amp;&amp;</span> <span class="token function">chown</span> -R pleroma /opt/pleroma<span class="token function">curl</span> <span class="token string">'https://git.pleroma.social/api/v4/projects/2/jobs/artifacts/stable/download?job=amd64'</span> -o /tmp/pleroma.zip <span class="token operator">&amp;&amp;</span> <span class="token function">unzip</span> /tmp/pleroma.zip -d /tmp/ <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> /tmp/release/* /opt/pleroma <span class="token operator">&amp;&amp;</span> <span class="token function">rmdir</span> /tmp/release <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> /tmp/pleroma.zip</code></pre><p>创建上传，静态文件和配置文件夹：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> -p /var/lib/pleroma/uploads <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> -p /var/lib/pleroma/static <span class="token operator">&amp;&amp;</span> <span class="token function">chown</span> -R pleroma /var/lib/pleroma<span class="token function">mkdir</span> -p /etc/pleroma <span class="token operator">&amp;&amp;</span> <span class="token function">chown</span> -R pleroma /etc/pleroma</code></pre><p>生成配置并确认（注意检查 PostgreSQL 密码）：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> pleroma -s <span class="token environment constant">$SHELL</span> -lc <span class="token string">"./bin/pleroma_ctl instance gen --output /etc/pleroma/config.exs --output-psql /tmp/setup_db.psql"</span><span class="token function">su</span> postgres -s <span class="token environment constant">$SHELL</span> -lc <span class="token string">"psql -f /tmp/setup_db.psql"</span><span class="token function">su</span> pleroma -s <span class="token environment constant">$SHELL</span> -lc <span class="token string">"./bin/pleroma_ctl migrate"</span></code></pre><p>启动 Pleroma！之后用 curl 检测一下，有 JSON 输出的话就 OK 了。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> pleroma -s <span class="token environment constant">$SHELL</span> -lc <span class="token string">"./bin/pleroma daemon"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sleep</span> <span class="token number">20</span> <span class="token operator">&amp;&amp;</span> <span class="token function">curl</span> http://localhost:4000/api/v1/instance</code></pre><h2 class="mdui-valign" id="Caddy-反代"><span>Caddy 反代&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Caddy-反代"><i class="mdui-icon material-icons">link</i></a></h2><p>怎么用 Caddy 我就不在这里说了。直接丢 Caddyfile：</p><pre class="language-none"><code class="language-none">:443, me.kwaa.moetls example@sld.tldroute &#123;    reverse_proxy 127.0.0.1:4000&#125;</code></pre><p>成果就是 <a href="https://me.kwaa.moe">me.kwaa.moe</a>，不知道能活到什么时候（请别打）。</p><h2 class="mdui-valign" id="尾声"><span>尾声&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#尾声"><i class="mdui-icon material-icons">link</i></a></h2><p>我又接触到了一种数据库和一种语言（方言？）。<br>数据库这方面我已经累了；但 Elixir 有点感兴趣，以后了解一下。<br>本来打算装个 Soapbox-FE，但完成度不是很高就删掉了。<br>搭完是挺有成就感，不过感觉不太用得到？<strong>毕竟社交力基本为零</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本来想搭建 Mastodon 的，但它配置要求较高——出于&lt;s&gt;省钱&lt;/s&gt;节俭原则，我长期部署的网站基本都是零成本（不包括域名）。甲骨文提供的两台小鸡都是1C1G，怎么办呢？&lt;br&gt;
这时我看到了 &lt;a href=&quot;https://pleroma.social/&quot;&gt;Pleroma&lt;/a&gt;。
    
    </summary>
    
    
      <category term="笔记" scheme="https://kwaa.dev/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Pleroma" scheme="https://kwaa.dev/tags/Pleroma/"/>
    
      <category term="Fediverse" scheme="https://kwaa.dev/tags/Fediverse/"/>
    
  </entry>
  
  <entry>
    <title>Knowles &amp; Sonion 动铁笔记</title>
    <link href="https://kwaa.dev/p/balanced-armature/"/>
    <id>https://kwaa.dev/p/balanced-armature/</id>
    <published>2020-09-17T20:20:00.000Z</published>
    <updated>2020-09-29T00:02:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>我对于部分型号动铁的记录，能找到 PDF 的会附上 PDF 地址；描述均为个人印象，不保证准确。<br>排序根据个人喜好和接触时间加权，没有内容就是想写但还没写。<a id="more"></a></p><h2 class="mdui-valign" id="全频单元"><span>全频单元&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#全频单元"><i class="mdui-icon material-icons">link</i></a></h2><h3 id="K-ED-29689-PDF">K ED-29689 <a href="https://https://www.knowles.com/docs/default-source/model-downloads/ed-29689-000.pdf">PDF</a></h3><p>最典型的全频/中频单元，我不怎么喜欢但它确实认知度最高。<br>变种：</p><ul><li>ED-26821 开孔</li><li>ED-26805 不明</li></ul><h3 id="S-2389-PDF">S 2389 <a href="https://www.sonion.com/wp-content/uploads/2389-3002874.pdf">PDF</a></h3><p>我永远喜欢 2300 系列。2389 是在 2323 基础上增加半线圈的型号；和 29689 适用范围相似但高频延展更好，也要柔和一些。</p><h3 id="S-2354-开孔-PDF">S 2354 开孔 <a href="https://www.sonion.com/wp-content/uploads/2354-3016530.pdf">PDF</a></h3><p>开孔型号，主要用在全频单动铁耳机。<br>它曾经是单动铁的神，现在或许还是。</p><h3 id="K-RAB-32257-PDF">K RAB-32257 <a href="https://media.digikey.com/pdf/Data%20Sheets/Knowles%20Acoustics%20PDFs/RAB-32257-000.pdf">PDF</a></h3><p>第一次接触 32257 是去年的 F7200 壳了，做完之后除了还行以外说不出别的。总之就是个还算可以的单动铁？但 2354 降到 45 之后我觉得它没有存在价值了。<s>肛管舞耳机御用单元（笑）</s></p><h2 class="mdui-valign" id="低频单元"><span>低频单元&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#低频单元"><i class="mdui-icon material-icons">link</i></a></h2><h3 id="S-38D1XJ007Mi-8a-复合-开孔-阻尼-PDF">S 38D1XJ007Mi/8a 复合 开孔 阻尼 <a href="https://www.sonion.com/wp-content/uploads/38D1XJ007Mi-8a-3202936.pdf">PDF</a></h3><p>一流低频！内置 Acupass 阻尼，强劲而不好调。</p><h3 class="mdui-valign" id="K-CI-22955"><span>K CI-22955&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#K-CI-22955"><i class="mdui-icon material-icons">link</i></a></h3><p>经典款。我之前用的四单元/五单元塞子低频都用它，只能说是中规中矩吧。<br>变种：</p><ul><li>CI-32984 开孔</li></ul><h3 class="mdui-valign" id="K-HODVTEC-31618"><span>K HODVTEC-31618&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#K-HODVTEC-31618"><i class="mdui-icon material-icons">link</i></a></h3><h2 class="mdui-valign" id="中频单元"><span>中频单元&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#中频单元"><i class="mdui-icon material-icons">link</i></a></h2><h3 class="mdui-valign" id="S-33AP007-复合"><span>S 33AP007 复合&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#S-33AP007-复合"><i class="mdui-icon material-icons">link</i></a></h3><h3 class="mdui-valign" id="S-33AJ007i-复合"><span>S 33AJ007i 复合&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#S-33AJ007i-复合"><i class="mdui-icon material-icons">link</i></a></h3><h3 class="mdui-valign" id="S-37AP007-复合"><span>S 37AP007 复合&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#S-37AP007-复合"><i class="mdui-icon material-icons">link</i></a></h3><h3 class="mdui-valign" id="S-28UAP01-复合"><span>S 28UAP01 复合&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#S-28UAP01-复合"><i class="mdui-icon material-icons">link</i></a></h3><h3 class="mdui-valign" id="K-RDA-32792-复合"><span>K RDA-32792 复合&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#K-RDA-32792-复合"><i class="mdui-icon material-icons">link</i></a></h3><h2 class="mdui-valign" id="中高频单元"><span>中高频单元&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#中高频单元"><i class="mdui-icon material-icons">link</i></a></h2><h3 id="S-2389D-复合-PDF">S 2389D 复合 <a href="https://www.sonion.com/wp-content/uploads/2389D-3200615.pdf">PDF</a></h3><p>两个 2389 并管为 2389D，最爱的中高频单元。<s>别问我单单元是全频为什么复合就放中高频了，问就是我的偏心</s></p><h3 id="K-TWFK-30017-复合-开孔-PDF">K TWFK-30017 复合 开孔 <a href="https://www.knowles.com/docs/default-source/model-downloads/twfk-30017-000.pdf">PDF</a></h3><p>你没看错，30017 (里面的 30018) 是开孔单元。它真的很小！<br>多见于圈铁，纯动铁用的不多。（CK100 / Noble Kaiser?）它由 FK-30018 和 WBFK-30019 复合，这个看到这里的人应该都知道了。<br>我的两个方案都以 30017 作中高频，一对 30017 还作为 MIDORI 的原料在原件盒里躺着。但我还没听过，所以现在不过多评价。<br>变种：</p><ul><li>TWFK-23991 阻抗更高</li><li>TWFK-31082 串电容？</li><li>TWFK-60232 (UE) 类似31082</li><li>TWFK-60519 (AKG) 不明</li></ul><h2 class="mdui-valign" id="极高频单元"><span>极高频单元&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#极高频单元"><i class="mdui-icon material-icons">link</i></a></h2><h3 class="mdui-valign" id="S-EST65DA01-复合-静电"><span>S EST65DA01 复合 静电&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#S-EST65DA01-复合-静电"><i class="mdui-icon material-icons">link</i></a></h3><p><s>然而这不是动铁</s><br>因为我第一个高端耳机是 AXE_P8，所以 EST65DA01 是我第一个接触的极高频单元。它贵，它声压低，它只能做极高，但它是静电所以我爱它。如果你想用这玩意，建议配个 2389D。</p><h3 class="mdui-valign" id="S-EST65QB02-复合-静电"><span>S EST65QB02 复合 静电&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#S-EST65QB02-复合-静电"><i class="mdui-icon material-icons">link</i></a></h3><p><s>然而这也不是动铁</s><br>传说中的一拖四，但我的荷包已经菠萝菠萝哒！<br>没钱买自然没办法体验，先放这里了。</p><h3 class="mdui-valign" id="K-SWFK-31736-复合"><span>K SWFK-31736 复合&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#K-SWFK-31736-复合"><i class="mdui-icon material-icons">link</i></a></h3><h3 class="mdui-valign" id="K-SWFK-32254-复合-阻尼"><span>K SWFK-32254 复合 阻尼&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#K-SWFK-32254-复合-阻尼"><i class="mdui-icon material-icons">link</i></a></h3><h3 class="mdui-valign" id="K-SWFK-32625-复合-阻尼"><span>K SWFK-32625 复合 阻尼&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#K-SWFK-32625-复合-阻尼"><i class="mdui-icon material-icons">link</i></a></h3><h3 class="mdui-valign" id="K-WBFK-30095"><span>K WBFK-30095&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#K-WBFK-30095"><i class="mdui-icon material-icons">link</i></a></h3><h3 class="mdui-valign" id="K-RAD-33518"><span>K RAD-33518&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#K-RAD-33518"><i class="mdui-icon material-icons">link</i></a></h3><p>飞傲说 33518 和 30095 几乎是一样的单元，这样的话 35 元的价格可以说性价比很高了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我对于部分型号动铁的记录，能找到 PDF 的会附上 PDF 地址；描述均为个人印象，不保证准确。&lt;br&gt;
排序根据个人喜好和接触时间加权，没有内容就是想写但还没写。
    
    </summary>
    
    
      <category term="音频" scheme="https://kwaa.dev/categories/%E9%9F%B3%E9%A2%91/"/>
    
    
      <category term="DIY" scheme="https://kwaa.dev/tags/DIY/"/>
    
      <category term="IEM" scheme="https://kwaa.dev/tags/IEM/"/>
    
      <category term="平衡电枢" scheme="https://kwaa.dev/tags/%E5%B9%B3%E8%A1%A1%E7%94%B5%E6%9E%A2/"/>
    
  </entry>
  
  <entry>
    <title>とある簡単なスクリプト - naive.sh</title>
    <link href="https://kwaa.dev/p/naive-sh/"/>
    <id>https://kwaa.dev/p/naive-sh/</id>
    <published>2020-09-11T23:51:00.000Z</published>
    <updated>2019-09-11T23:51:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>花几天功夫写了个 NaiveProxy 脚本，就是这样。<br><a href="https://github.com/kwaa/naive.sh">kwaa/naive.sh</a></p><h2 class="mdui-valign" id="设计说明"><span>设计说明&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#设计说明"><i class="mdui-icon material-icons">link</i></a></h2><p>我写它就是用来自动更新 NaiveProxy。<br>后来我想了想，不如干脆把功能写完整发上来吧？于是就有了这玩意。<br>它不会像<a href="https://github.com/233boy/v2ray">某脚本</a>一样搞墙外墙，且不会保存在本地以避免产生垃圾 &amp; 确保你每次使用都是最新版本。</p><h2 class="mdui-valign" id="如何使用"><span>如何使用&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#如何使用"><i class="mdui-icon material-icons">link</i></a></h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">wget</span> -qO- https://git.io/naive.sh<span class="token punctuation">)</span> <span class="token comment">#正常模式</span><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">wget</span> -qO- https://git.io/naive.sh<span class="token punctuation">)</span> update <span class="token comment">#自动更新naiveproxy</span></code></pre><h2 class="mdui-valign" id="要求"><span>要求&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#要求"><i class="mdui-icon material-icons">link</i></a></h2><p>Linux, x86 或 x86_64<br>以 root 运行<br>已安装 wget 和 libnss3<br>没了。它只做它该做的事，依赖什么的就请自己解决吧。</p><h2 class="mdui-valign" id="待做"><span>待做&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#待做"><i class="mdui-icon material-icons">link</i></a></h2><ul><li>快速安装 &amp; 自动配置 Caddy v2 + forwardproxy</li><li>支持 linux-arm, linux-arm64</li><li>包管理器为 pacman, apt, yum 其一时自动安装依赖</li></ul><h2 class="mdui-valign" id="许可证"><span>许可证&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#许可证"><i class="mdui-icon material-icons">link</i></a></h2><p>随手写的小玩意我必用 WTFPL</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;花几天功夫写了个 NaiveProxy 脚本，就是这样。&lt;br&gt;
&lt;a href=&quot;https://github.com/kwaa/naive.sh&quot;&gt;kwaa/naive.sh&lt;/a&gt;&lt;/p&gt;
&lt;h2 class=&quot;mdui-valign&quot; id=&quot;设计说明&quot;&gt;&lt;span
      
    
    </summary>
    
    
      <category term="折腾" scheme="https://kwaa.dev/categories/%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="NaiveProxy" scheme="https://kwaa.dev/tags/NaiveProxy/"/>
    
  </entry>
  
  <entry>
    <title>一年后的成果：STREIN IEM-AXE_P8</title>
    <link href="https://kwaa.dev/p/project-axe-p8/"/>
    <id>https://kwaa.dev/p/project-axe-p8/</id>
    <published>2020-09-03T23:54:00.000Z</published>
    <updated>2021-01-15T17:56:33.942Z</updated>
    
    <content type="html"><![CDATA[<p>经过十五天，IEM-AXE 吃灰了一年的十六个单元做成耳机回到了我手上。<br>怎么说呢？虽然处处妥协，但它确实是我第一个原创耳机。<br>由于是单边八单元（静电一拖二而非一拖四），我命名为 PROTOTYPE8，也叫P8。</p><a id="more"></a><p>频响：</p><figure class="mdui-img-fluid"><img src="https://cdn.jsdelivr.net/gh/kwaa/kwaa.github.io/source/_posts/project-axe-p8/fr.png" alt="Frequency Response 1/24"class="mdui-img-rounded" loading="lazy"></figure><p>听感没什么好说的，人声较远 / 低频略多以外基本满意（话说我也没同档次耳机对比）；100Hz 以下匹配不好大概是单元补焊点导致的。</p><blockquote><p>IEM-AXE_P8 (最终设计) 8单元 4分频 3导管 金属嘴</p></blockquote><ul><li>38D1XJ007Mi(并联) - 并4.7Ω+2.2uF - 并管黄阻尼(4700) - 10mm*1.5mmID</li><li>33AJ007i(并联) - 串10Ω - 并管黄阻尼(4700) - 10mm*1.5mmID</li><li>2389D(半线圈并联) - 串2.2uF, 并1uF - 棕阻尼(1000) - 8mm*1.5mmID</li><li>EST65QB02(并联) - 串470nF - 白阻尼(680) - 5mm*1.5mmID</li></ul><p>方案如上，这是 IEM-AXE_P8 的最终设计，但不是 IEM-AXE 的最终设计；我之后会尽量给它画上一个完美的句号。</p><p>Special Thanks: Mirzoid (STREIN Member，本次负责耳机制作 &amp; 部分分频)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经过十五天，IEM-AXE 吃灰了一年的十六个单元做成耳机回到了我手上。&lt;br&gt;
怎么说呢？虽然处处妥协，但它确实是我第一个原创耳机。&lt;br&gt;
由于是单边八单元（静电一拖二而非一拖四），我命名为 PROTOTYPE8，也叫P8。&lt;/p&gt;
    
    </summary>
    
    
      <category term="音频" scheme="https://kwaa.dev/categories/%E9%9F%B3%E9%A2%91/"/>
    
    
      <category term="DIY" scheme="https://kwaa.dev/tags/DIY/"/>
    
      <category term="IEM" scheme="https://kwaa.dev/tags/IEM/"/>
    
      <category term="入耳式耳机" scheme="https://kwaa.dev/tags/%E5%85%A5%E8%80%B3%E5%BC%8F%E8%80%B3%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 流水线 &amp; 相关</title>
    <link href="https://kwaa.dev/p/github-actions-for-hexo/"/>
    <id>https://kwaa.dev/p/github-actions-for-hexo/</id>
    <published>2020-08-17T05:35:00.000Z</published>
    <updated>2021-01-15T17:56:33.942Z</updated>
    
    <content type="html"><![CDATA[<p>去年只有一个 yaml 的文章居然追加了这么多内容？不管怎么样，能多写点东西我是很高兴了。</p><a id="more"></a><h2 class="mdui-valign" id="301-跳转"><span>301 跳转&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#301-跳转"><i class="mdui-icon material-icons">link</i></a></h2><p>这个博客之前的域名是 <a href="https://blog.917.moe">https://blog.917.moe</a>，现在换成了 <a href="https://kwaa.dev">https://kwaa.dev</a>。<br>怎么让旧链接跳转呢？我写了一个 Worker 来做这件事。<br>这里要吹一波 Cloudflare，CDN 和 Worker 都可以免费使用。<br>虽然原域名过两个月就到期了，能用一会是一会吧。</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'fetch'</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> redirectTo <span class="token operator">=</span> <span class="token string">'kwaa.dev'</span><span class="token punctuation">;</span>  url<span class="token punctuation">.</span>hostname <span class="token operator">=</span> redirectTo<span class="token punctuation">;</span>  event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span>    Response<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token number">301</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h2 class="mdui-valign" id="PWA"><span>PWA&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#PWA"><i class="mdui-icon material-icons">link</i></a></h2><p>去年还是 manifest.json，今年就变成了 manifest.webmanifest。<br>新的 maskable_icon 我肯定要用，其他貌似没太大变化？<br>和上次一样，<a href="https://github.com/kwaa/kwaa.github.io/blob/master/source/manifest.webmanifest">manifest</a> 和 <a href="https://github.com/kwaa/kwaa.github.io/blob/master/source/sw.js">sw.js</a> 都是我自己写的，没用那些乱七八糟的插件。不过图片缓存不知道为什么无效？以后再改改看吧。</p><h2 class="mdui-valign" id="Instant-View"><span>Instant View&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Instant-View"><i class="mdui-icon material-icons">link</i></a></h2><p>我经常用 Telegram，当然也想让自己的博客能兼容 Instant View。<br>不过实际上应该说是 Instant View 兼容我的博客？<br>总之 Theme M 需要写的部分不是很多，下面是本站的模板文件。</p><pre class="language-none"><code class="language-none">~version: &quot;2.1&quot;body:    &#x2F;&#x2F;articlecover: $body&#x2F;&#x2F;div[has-class(&quot;mdui-card-media&quot;)]&#x2F;&#x2F;imgchannel: &quot;@kwaachannel&quot;@remove: $body&#x2F;&#x2F;a[has-class(&quot;mdui-btn&quot;)]@remove: $body&#x2F;&#x2F;a[has-class(&quot;mdui-card-primary-title&quot;)]@remove: $body&#x2F;&#x2F;div[has-class(&quot;mdui-card-primary-subtitle&quot;)]</code></pre><p>在 <a href="https://instantview.telegram.org/my">My Templates - Instant View</a> 创建新模板，标记十个或更多 URL 后即可提交。</p><h2 class="mdui-valign" id="Gulp-Github-Actions-自动部署"><span>Gulp &amp; Github Actions 自动部署&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Gulp-Github-Actions-自动部署"><i class="mdui-icon material-icons">link</i></a></h2><p>kwaa.dev 的配置加入了 gulp ，并且全面更新了依赖版本。<br>因为 <a href="https://github.com/kwaa/m">Theme M</a> 设计之初就<strong>没有放在本地的 css,js 文件</strong>，所以也不需要 gulp-clean-css 和 gulp-uglify。</p><p>安装：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i gulp -g<span class="token function">npm</span> i gulp gulp-htmlclean gulp-htmlmin gulp-minify-inlinegulp -v</code></pre><p>在博客根目录创建 gulpfile.js:</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlmin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlclean'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> minifyInline <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-minify-inline'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// html</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            minifyJS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            minifyCSS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            minifyURLs<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// inline</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-inline'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">minifyInline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// task</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>    <span class="token string">'minify-html'</span><span class="token punctuation">,</span><span class="token string">'minify-inline'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>创建 ./.github/workflows 文件夹，并新建 main.yml:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Build &amp; Deploy ./kwaa.dev<span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> master<span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span>    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Use Node.js 14.x        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v2<span class="token punctuation">-</span>beta        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">'14'</span>          <span class="token key atrule">check-latest</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build        <span class="token key atrule">run</span><span class="token punctuation">:</span> npm i <span class="token punctuation">-</span>g hexo gulp <span class="token important">&amp;&amp;</span> npm install <span class="token important">&amp;&amp;</span> hexo generate <span class="token important">&amp;&amp;</span> gulp      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy        <span class="token key atrule">uses</span><span class="token punctuation">:</span> peaceiris/actions<span class="token punctuation">-</span>gh<span class="token punctuation">-</span>pages@v3        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">github_token</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.GH_TOKEN <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">publish_branch</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages          <span class="token key atrule">publish_dir</span><span class="token punctuation">:</span> /public</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;去年只有一个 yaml 的文章居然追加了这么多内容？不管怎么样，能多写点东西我是很高兴了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://kwaa.dev/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="PWA" scheme="https://kwaa.dev/tags/PWA/"/>
    
      <category term="Progressive Web Apps" scheme="https://kwaa.dev/tags/Progressive-Web-Apps/"/>
    
      <category term="Instant View" scheme="https://kwaa.dev/tags/Instant-View/"/>
    
      <category term="Github Actions" scheme="https://kwaa.dev/tags/Github-Actions/"/>
    
      <category term="Hexo" scheme="https://kwaa.dev/tags/Hexo/"/>
    
      <category term="CI/CD" scheme="https://kwaa.dev/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>体验 WebAssembly 虚拟机 SSVM</title>
    <link href="https://kwaa.dev/p/ssvm-nodejs/"/>
    <id>https://kwaa.dev/p/ssvm-nodejs/</id>
    <published>2020-07-30T14:11:00.000Z</published>
    <updated>2020-08-03T15:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>偶然看到<a href="https://www.v2ex.com/t/693807">写 Rust 代码，领树莓派</a><br>这种好事怎么能错过？虽然只能领到 Zero W；我本来就对 Rust 比较感兴趣，这次正好尝试一下。</p><a id="more"></a><p>先按照<a href="https://www.secondstate.io/articles/get-started-with-rust-functions-in-node-zh/">教程</a>走吧：<br>为了省事我用的 docker，但实际上一点都不省事。<br>ssvm 要求 Ubuntu 20.04，对我服务器装着的纯血 Arch 不太友好。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/second-state/ssvm-nodejs-starter<span class="token builtin class-name">cd</span> ssvm-nodejs-starterdocker build -t ssvm-nodejs:v1 <span class="token builtin class-name">.</span> <span class="token comment"># 需要很长时间，注意</span>docker run -p <span class="token number">3000</span>:3000 --rm -it -v <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>:/app ssvm-nodejs:v1</code></pre><p>进入开发环境，接下来尝试编译：<br>（cargo build 速度感人，这里我推荐使用 proxychains-ng）</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /appcargo build <span class="token comment"># 需要很长时间，注意</span>ssvmup build <span class="token comment"># 我前几次尝试的时候没有执行 cargo package，结果一点反应没有；引以为戒。</span>node node/app.js <span class="token comment"># 编译完就可以运行了</span></code></pre><p>这是一个 Hello World 示例，跑起来大概这样：</p><figure class="mdui-img-fluid"><img src="https://cdn.jsdelivr.net/gh/kwaa/kwaa.github.io/source/_posts/ssvm-nodejs/hello.png" alt="hello"class="mdui-img-rounded" loading="lazy"></figure><p>新手教程已经完成了，我也该着手修改了。<br>做点什么呢？Rust 和 WebAssembly 我都是第一次接触。<br>考虑到作为初学者不应该写的太大，这里我选择了 leetcode 的 <a href="https://leetcode.com/problems/generate-a-string-with-characters-that-have-odd-counts/">1374. Generate a String With Characters That Have Odd Counts</a>。</p><p>之后我花了两天尝试用 ajaxForm 提交，不过怎么样都是失败。</p><figure class="mdui-img-fluid"><img src="https://cdn.jsdelivr.net/gh/kwaa/kwaa.github.io/source/_posts/ssvm-nodejs/web.png" alt="web"class="mdui-img-rounded" loading="lazy"></figure><p>于是就有了现在下面的这个玩意… 反正只说了学习基础知识欸嘿</p><p><strong><a href="http://lib.rs">lib.rs</a>:</strong></p><pre class="language-rust" data-language="rust"><code class="language-rust"><span class="token keyword">use</span> <span class="token namespace">wasm_bindgen<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token attribute attr-name">#[wasm_bindgen]</span><span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">sb</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">String</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> l <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token string">"a"</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>l <span class="token keyword">as</span> <span class="token keyword">usize</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token keyword">if</span> l <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span> <span class="token string">"a"</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token string">"b"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">"The Rust function sb() received &#123;&#125;"</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> r<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>app.js:</strong></p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> sb <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'../pkg/ssvm_nodejs_starter_lib.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> hostname <span class="token operator">=</span> <span class="token string">'0.0.0.0'</span><span class="token punctuation">;</span><span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">;</span><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> queryObject <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span>query<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>queryObject<span class="token punctuation">[</span><span class="token string">'length'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Please use command curl http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hostname<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>port<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/?length=LENGTH \n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token function">sb</span><span class="token punctuation">(</span>queryObject<span class="token punctuation">[</span><span class="token string">'length'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> hostname<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Server running at http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hostname<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>port<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这次试手的源码我放在了 <a href="https://github.com/kwaa/ssvm-nodejs-starter">GitHub</a> 。（然而并没有什么用）</p><blockquote><p>顺便一提，sb 指 stringbuilder</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;偶然看到&lt;a href=&quot;https://www.v2ex.com/t/693807&quot;&gt;写 Rust 代码，领树莓派&lt;/a&gt;&lt;br&gt;
这种好事怎么能错过？虽然只能领到 Zero W；我本来就对 Rust 比较感兴趣，这次正好尝试一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://kwaa.dev/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Rust" scheme="https://kwaa.dev/tags/Rust/"/>
    
      <category term="WebAssembly" scheme="https://kwaa.dev/tags/WebAssembly/"/>
    
      <category term="WASM" scheme="https://kwaa.dev/tags/WASM/"/>
    
      <category term="Node.js" scheme="https://kwaa.dev/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Introducting Theme-M</title>
    <link href="https://kwaa.dev/p/theme-m/"/>
    <id>https://kwaa.dev/p/theme-m/</id>
    <published>2020-07-26T15:00:00.000Z</published>
    <updated>2020-08-14T05:42:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>THEME-M 从 2019 年初创建文件夹，于 2020 年 7 月重写。<br>重写后卖相更好+精简依赖项，目前只有 MDUI 必须引用；以至于我的样式补丁直接打在页首。<br>新外观参考了不少主题/网站，这里就不一个个列出来了。<br>我个人属于简洁主义者<s>尽管源码并不简洁</s>，所以只实现了自己需要的功能。<br>jQuery 再见！</p><blockquote><p>我真的不擅长写 EJS/JS，语法臃肿以后再改进吧<s>或者不改进了</s>。</p></blockquote><a id="more"></a><h3 class="mdui-valign" id="项目地址"><span>项目地址&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#项目地址"><i class="mdui-icon material-icons">link</i></a></h3><p><a href="https://github.com/kwaa/m">kwaa/m</a></p><h3 class="mdui-valign" id="功能说明"><span>功能说明&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#功能说明"><i class="mdui-icon material-icons">link</i></a></h3><h4 id="NPM-安装">NPM 安装</h4><p>Hexo 5.0 之后增加了通过 NPM 安装主题的功能，我也想把主题发布到 NPM 上但这和滚动更新的特点不合，所以还是等一段时间吧。</p><h4 id="自动暗模式">自动暗模式</h4><p>MDUI 自带（我提了个 issue），在主题里卡片和卡片以外是分开设置的（分别为 theme.mdui.layout 和 theme.m.layout，theme.m.layout 未设置时自动使用 theme.mdui.layout 的值）。</p><h4 id="评论">评论</h4><p>只做了 Utterances。以后加上 Disqus，其他的目前不考虑。</p><h4 id="PJAX">PJAX</h4><p>重写后用的是<a href="https://github.com/MoOx/pjax">MoOx/pjax</a>，不需要 jQuery。<br>没有进度条，因为我觉得淡入淡出效果足够了。</p><h4 id="Lazyload">Lazyload</h4><p>能够 loading=“lazy” 完事，又何必弄那么麻烦？</p><h4 id="TOC">TOC</h4><p>放弃了</p><h4 id="语法高亮">语法高亮</h4><p>更新：Hexo 5.0 原生支持 Prism.js。<br>所以你只需要在博客的 _config.yml 启用 prism，再在载入主题的 _config.yml 自定义 css 即可。</p><h4 id="搜索">搜索</h4><p>自动生成高端大气的 Google 搜索。本地搜索待重写</p><h3 class="mdui-valign" id="文档"><span>文档&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#文档"><i class="mdui-icon material-icons">link</i></a></h3><p>不打算写文档。暂时</p><h3 class="mdui-valign" id="版本号"><span>版本号&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#版本号"><i class="mdui-icon material-icons">link</i></a></h3><p>Theme-M 不设版本号，如果你是来自未来的其他使用者，你可以把 git pull 当作滚动更新；<br>需要注意，我随时可能根据自己的喜好调整/删除任何内容。</p><h3 class="mdui-valign" id="许可证"><span>许可证&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#许可证"><i class="mdui-icon material-icons">link</i></a></h3><p>我讨厌 GPL 的传染性，所以不会用它。<br>MIT？Apache2.0？这些都很好，但我还是想用——<br><a href="http://wtfpl.net">WTFPL(Do What The Fuck You Want To Public License)</a>.<br>You just DO WHAT THE FUCK YOU WANT TO!</p><h3 class="mdui-valign" id="样式测试"><span>样式测试&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#样式测试"><i class="mdui-icon material-icons">link</i></a></h3><p>以免麻烦，顺手放在这里。</p><p>当你凝视着bug，bug也凝视着你<br>不能信任那些Terminal或Editor用白底的人</p><pre class="language-none"><code class="language-none">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</code></pre><pre class="language-rust" data-language="rust"><code class="language-rust"><span class="token attribute attr-name">#[derive(Debug)]</span><span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">State</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Start</span><span class="token punctuation">,</span>    <span class="token class-name">Transient</span><span class="token punctuation">,</span>    <span class="token class-name">Closed</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">'a</span> <span class="token keyword">str</span><span class="token operator">></span> <span class="token keyword">for</span> <span class="token class-name">State</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">'a</span> <span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token keyword">Self</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">match</span> s <span class="token punctuation">&#123;</span>            <span class="token string">"start"</span> <span class="token operator">=></span> <span class="token class-name">State</span><span class="token punctuation">::</span><span class="token class-name">Start</span><span class="token punctuation">,</span>            <span class="token string">"closed"</span> <span class="token operator">=></span> <span class="token class-name">State</span><span class="token punctuation">::</span><span class="token class-name">Closed</span><span class="token punctuation">,</span>            _ <span class="token operator">=></span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"apples"</span><span class="token punctuation">,</span>    <span class="token property">"count"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">12000</span><span class="token punctuation">,</span> <span class="token number">20000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span> <span class="token property">"sensitive"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"oranges"</span><span class="token punctuation">,</span>    <span class="token property">"count"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">17500</span><span class="token punctuation">,</span> <span class="token null keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span> <span class="token property">"sensitive"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@requires_authorization</span><span class="token keyword">def</span> <span class="token function">somefunc</span><span class="token punctuation">(</span>param1<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> param2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">r'''A docstring'''</span>    <span class="token keyword">if</span> param1 <span class="token operator">></span> param2<span class="token punctuation">:</span> <span class="token comment"># interesting</span>        <span class="token keyword">print</span> <span class="token string">'Gre\'ater'</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>param2 <span class="token operator">-</span> param1 <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> 0b10l<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token boolean">None</span><span class="token keyword">class</span> <span class="token class-name">SomeClass</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token operator">>></span><span class="token operator">></span> message <span class="token operator">=</span> <span class="token triple-quoted-string string">'''interpreter... prompt'''</span></code></pre><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">function</span> <span class="token function">$init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">checked</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>title<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">$initHighlight</span><span class="token punctuation">(</span><span class="token parameter">block<span class="token punctuation">,</span> cls</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cls<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token regex">/\bno\-highlight\b/</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token function">process</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">)</span> <span class="token operator">+</span>             <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> class="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>cls<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* handle exception */</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> classes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">checkCondition</span><span class="token punctuation">(</span>classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'undefined'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>web<span class="token operator">-</span>component<span class="token operator">></span><span class="token punctuation">&#123;</span>block<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>web<span class="token operator">-</span>component<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> $initHighlight<span class="token punctuation">;</span></code></pre><pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* An annoying "Hello World" example */</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">0xFFFF</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello, World!"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>  unordered_map <span class="token operator">&lt;</span>string<span class="token punctuation">,</span> vector<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">></span> m<span class="token punctuation">;</span>  m<span class="token punctuation">[</span><span class="token string">"key"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"\\\\"</span><span class="token punctuation">;</span> <span class="token comment">// this is an error</span>  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">2e3</span> <span class="token operator">+</span> <span class="token number">12l</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token string">"topic"</span> <span class="token punctuation">(</span>    <span class="token string">"id"</span> <span class="token keyword">serial</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    <span class="token string">"forum_id"</span> <span class="token keyword">integer</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token string">"subject"</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token string">"topic"</span><span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> forum_id <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token string">"forum_id"</span><span class="token punctuation">)</span><span class="token keyword">REFERENCES</span> <span class="token string">"forum"</span> <span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- Initials</span><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token string">"topic"</span> <span class="token punctuation">(</span><span class="token string">"forum_id"</span><span class="token punctuation">,</span> <span class="token string">"subject"</span><span class="token punctuation">)</span><span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'D''artagnian'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class="language-objectivec" data-language="objectivec"><code class="language-objectivec"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token expression"><span class="token operator">&lt;</span>UIKit<span class="token operator">/</span>UIKit<span class="token punctuation">.</span>h<span class="token operator">></span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token string">"Dependency.h"</span></span><span class="token keyword">@protocol</span> WorldDataSource<span class="token operator">@</span>optional<span class="token operator">-</span> <span class="token punctuation">(</span>NSString<span class="token operator">*</span><span class="token punctuation">)</span>worldName<span class="token punctuation">;</span><span class="token operator">@</span>required<span class="token operator">-</span> <span class="token punctuation">(</span>BOOL<span class="token punctuation">)</span>allowsToLive<span class="token punctuation">;</span><span class="token keyword">@end</span><span class="token keyword">@property</span> <span class="token punctuation">(</span>nonatomic<span class="token punctuation">,</span> readonly<span class="token punctuation">)</span> NSString <span class="token operator">*</span>title<span class="token punctuation">;</span><span class="token operator">-</span> <span class="token punctuation">(</span>IBAction<span class="token punctuation">)</span> show<span class="token punctuation">;</span><span class="token keyword">@end</span></code></pre><pre class="language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @author John Smith &lt;john.smith@example.com>*/</span><span class="token keyword">package</span> <span class="token namespace">l2f<span class="token punctuation">.</span>gameserver<span class="token punctuation">.</span>model</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">L2Char</span> <span class="token keyword">extends</span> <span class="token class-name">L2Object</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Short</span> ERROR <span class="token operator">=</span> <span class="token number">0x0001</span><span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> z<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    _ai <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Should not be called"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// wtf!?</span>      <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token builtin">Foundation</span><span class="token atrule">@objc</span> <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span> <span class="token builtin">Entity</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token builtin">String</span><span class="token operator">!</span>  <span class="token keyword">var</span> age<span class="token punctuation">:</span>  <span class="token builtin">Int</span><span class="token operator">!</span>  <span class="token keyword">init</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* /* ... */</span> <span class="token operator">*</span><span class="token operator">/</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// Return a descriptive string for this person</span>  <span class="token keyword">func</span> <span class="token function">description</span><span class="token punctuation">(</span>offset<span class="token punctuation">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">String</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"<span class="token interpolation"><span class="token delimiter variable">\(</span>name<span class="token delimiter variable">)</span></span> is <span class="token interpolation"><span class="token delimiter variable">\(</span>age <span class="token operator">+</span> offset<span class="token delimiter variable">)</span></span> years old"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">&#123;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Chunkfive<span class="token punctuation">;</span> <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'Chunkfive.otf'</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body, .usertext</span> <span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #F0F0F0<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> #600<span class="token punctuation">;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Chunkfive<span class="token punctuation">,</span> sans<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>print.css<span class="token punctuation">)</span></span><span class="token punctuation">;</span></span><span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">&#123;</span>  <span class="token selector">a[href^=http]::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">attr</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment"># The Greeter class</span><span class="token keyword">class</span> <span class="token class-name">Greeter</span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">initialize</span></span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>    <span class="token variable">@name</span> <span class="token operator">=</span> name<span class="token punctuation">.</span>capitalize  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">salute</span></span>    puts <span class="token string">"Hello <span class="token interpolation"><span class="token delimiter tag">#&#123;</span><span class="token variable">@name</span><span class="token delimiter tag">&#125;</span></span>!"</span>  <span class="token keyword">end</span><span class="token keyword">end</span>g <span class="token operator">=</span> <span class="token constant">Greeter</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span>g<span class="token punctuation">.</span>salute</code></pre><pre class="language-makefile" data-language="makefile"><code class="language-makefile"><span class="token comment"># Makefile</span>BUILDDIR      <span class="token operator">=</span> _buildEXTRAS       <span class="token operator">?=</span> <span class="token variable">$</span><span class="token punctuation">(</span>BUILDDIR<span class="token punctuation">)</span>/extras<span class="token builtin">.PHONY</span><span class="token punctuation">:</span> main clean<span class="token symbol">main</span><span class="token punctuation">:</span>  <span class="token operator">@</span>echo <span class="token string">"Building main facility..."</span>  build_main <span class="token variable">$</span><span class="token punctuation">(</span>BUILDDIR<span class="token punctuation">)</span><span class="token symbol">clean</span><span class="token punctuation">:</span>  rm -rf <span class="token variable">$</span><span class="token punctuation">(</span>BUILDDIR<span class="token punctuation">)</span>/*</code></pre><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">float64</span><span class="token punctuation">)</span>    ch <span class="token operator">&lt;-</span> <span class="token number">1.0e10</span>    <span class="token comment">// magic number</span>    x<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span> ch    <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>`exitting now\`<span class="token punctuation">)</span>    <span class="token keyword">go</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token string">"hello world!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment">###### CONFIG</span><span class="token assign-left variable">ACCEPTED_HOSTS</span><span class="token operator">=</span><span class="token string">"/root/.hag_accepted.conf"</span><span class="token assign-left variable">BE_VERBOSE</span><span class="token operator">=</span>false<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token environment constant">$UID</span>"</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token keyword">then</span>  <span class="token builtin class-name">echo</span> <span class="token string">"Superuser rights required"</span>  <span class="token builtin class-name">exit</span> <span class="token number">2</span><span class="token keyword">fi</span><span class="token function-name function">genApacheConf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token builtin class-name">echo</span> -e <span class="token string">"# Host <span class="token variable">$&#123;HOME_DIR&#125;</span><span class="token variable">$1</span>/<span class="token variable">$2</span> :"</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">; boilerplate</span><span class="token selector">[package]</span><span class="token constant">name</span> <span class="token attr-value"><span class="token punctuation">=</span> "some_name"</span><span class="token constant">authors</span> <span class="token attr-value"><span class="token punctuation">=</span> ["Author"]</span><span class="token constant">description</span> <span class="token attr-value"><span class="token punctuation">=</span> "This is \</span>a description"<span class="token selector">[[lib]</span>]<span class="token constant">name</span> <span class="token attr-value"><span class="token punctuation">=</span> $&#123;NAME&#125;</span><span class="token constant">default</span> <span class="token attr-value"><span class="token punctuation">=</span> True</span><span class="token constant">auto</span> <span class="token attr-value"><span class="token punctuation">=</span> no</span><span class="token constant">counter</span> <span class="token attr-value"><span class="token punctuation">=</span> 1_000</span></code></pre><h1>Heading 1</h1><h2 class="mdui-valign" id="Heading-2"><span>Heading 2&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Heading-2"><i class="mdui-icon material-icons">link</i></a></h2><h3 class="mdui-valign" id="Heading-3"><span>Heading 3&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Heading-3"><i class="mdui-icon material-icons">link</i></a></h3><h4 id="Heading-4">Heading 4</h4><h5 id="Heading-5">Heading 5</h5><h6 id="Heading-6">Heading 6</h6><hr><h2 class="mdui-valign" id="Paragraph"><span>Paragraph&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Paragraph"><i class="mdui-icon material-icons">link</i></a></h2><p>Lorem ipsum dolor sit amet, <a href="">test link</a> consectetur adipiscing elit. <strong>Strong text</strong> pellentesque ligula commodo viverra vehicula. <em>Italic text</em> at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. <s>Deleted text</s> tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.</p><p>Interdum et malesuada fames ac ante ipsum primis in faucibus. <code>Sed erat diam</code>, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.</p><blockquote><p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p></blockquote><p>Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.</p><h2 class="mdui-valign" id="List-Types"><span>List Types&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#List-Types"><i class="mdui-icon material-icons">link</i></a></h2><h3 class="mdui-valign" id="Definition-List-dl"><span>Definition List (dl)&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Definition-List-dl"><i class="mdui-icon material-icons">link</i></a></h3><dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl><h3 class="mdui-valign" id="Ordered-List-ol"><span>Ordered List (ol)&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Ordered-List-ol"><i class="mdui-icon material-icons">link</i></a></h3><ol><li>List Item 1</li><li>List Item 2</li><li>List Item 3</li></ol><h3 class="mdui-valign" id="Unordered-List-ul"><span>Unordered List (ul)&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Unordered-List-ul"><i class="mdui-icon material-icons">link</i></a></h3><ul><li>List Item 1</li><li>List Item 2</li><li>List Item 3</li></ul><h3 class="mdui-valign" id="Checkbox-List-ul"><span>Checkbox List (ul)&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Checkbox-List-ul"><i class="mdui-icon material-icons">link</i></a></h3><ul><li>[ ] List Item 1 unchecked</li><li>[x] List Item 2 checked</li><li>[X] List Item 3 checked</li></ul><h2 class="mdui-valign" id="Table"><span>Table&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Table"><i class="mdui-icon material-icons">link</i></a></h2><div class="mdui-table-fluid mdui-shadow-0"><table class="mdui-table mdui-table-hoverable"><thead><tr><th>Table Header 1</th><th>Table Header 2</th><th>Table Header 3</th></tr></thead><tbody><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr></tbody></table></div><h2 class="mdui-valign" id="Misc-Stuff-abbr-acronym-sub-sup-kbd-etc"><span>Misc Stuff - abbr, acronym, sub, sup, kbd, etc.&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Misc-Stuff-abbr-acronym-sub-sup-kbd-etc"><i class="mdui-icon material-icons">link</i></a></h2><p>Lorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title="National Basketball Association">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title="Avenue">AVE</abbr>. Use <kbd>Crtl</kbd> + <kbd>C</kbd> to stop.</p><div class="mdui-video-container"><iframe src="https://www.youtube.com/embed/okJ9Vk6owG8" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;THEME-M 从 2019 年初创建文件夹，于 2020 年 7 月重写。&lt;br&gt;
重写后卖相更好+精简依赖项，目前只有 MDUI 必须引用；以至于我的样式补丁直接打在页首。&lt;br&gt;
新外观参考了不少主题/网站，这里就不一个个列出来了。&lt;br&gt;
我个人属于简洁主义者&lt;s&gt;尽管源码并不简洁&lt;/s&gt;，所以只实现了自己需要的功能。&lt;br&gt;
jQuery 再见！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我真的不擅长写 EJS/JS，语法臃肿以后再改进吧&lt;s&gt;或者不改进了&lt;/s&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="https://kwaa.dev/categories/%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="Hexo" scheme="https://kwaa.dev/tags/Hexo/"/>
    
      <category term="Theme-M" scheme="https://kwaa.dev/tags/Theme-M/"/>
    
  </entry>
  
  <entry>
    <title>ID Refresh</title>
    <link href="https://kwaa.dev/p/id-refresh/"/>
    <id>https://kwaa.dev/p/id-refresh/</id>
    <published>2020-07-12T13:41:00.000Z</published>
    <updated>2020-12-25T02:04:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>经过十个月的考虑<s>玩游戏</s>时间，我选出了终结过渡期的新 ID。</p><a id="more"></a><h2 class="mdui-valign" id="AB7575DD-9E94-45CD-4917-000D7FEBEAAE"><span>AB7575DD-9E94-45CD-4917-000D7FEBEAAE&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#AB7575DD-9E94-45CD-4917-000D7FEBEAAE"><i class="mdui-icon material-icons">link</i></a></h2><p>有什么比一串 UUID 更独一无二的呢？没有。<br>Bugfix: 由 AB7575DD-9E94-B917-85CD-000D7FEBEAAE 修改为 AB7575DD-9E94-4917-85CD-000D7FEBEAAE</p><h2 class="mdui-valign" id="星川-藍-ほしかわ-あい-Hoshikawa-AI"><span>星川 藍 / ほしかわ あい / Hoshikawa AI&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#星川-藍-ほしかわ-あい-Hoshikawa-AI"><i class="mdui-icon material-icons">link</i></a></h2><p>在归化之前仅作为网名使用，只保留单字「藍」。</p><h2 class="mdui-valign" id="xb917-kwaa"><span>xb917 &gt; kwaa&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#xb917-kwaa"><i class="mdui-icon material-icons">link</i></a></h2><p>我觉得最麻烦的还要属这个，短字母的撞名几率太大。<br>ID 可以乱改但域名不能乱改！短即是正义，并且这次我不想加数字了；<br>直接从罗马音 Hoshi<strong>k</strong>a<strong>wa</strong> <strong>A</strong>i 里取四个字母，完毕。</p><h2 class="mdui-valign" id="917-moe-kwaa-dev-kwaa-moe"><span>917.moe &gt; kwaa.dev / kwaa.moe&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#917-moe-kwaa-dev-kwaa-moe"><i class="mdui-icon material-icons">link</i></a></h2><p>一个域名变两个域名，双份快乐 &amp; 双份价格。好在都不贵… 没有溢价。<br>之后博客预计直接使用 kwaa.dev 作为主域名，kwaa.moe 另作它用。</p><h2 class="mdui-valign" id="U-Cor-kwaa-dev"><span>U.Cor &gt; ./kwaa.dev&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#U-Cor-kwaa-dev"><i class="mdui-icon material-icons">link</i></a></h2><p>简单的修改，标题直接变为域名。</p><p>顺便一提，U.Cor 的全称是 Unknown-Corner（未知的小角落），命名来源于 2015 年的我… 2019 年开新博客时没什么好名字，就这么缩短一下用上了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经过十个月的考虑&lt;s&gt;玩游戏&lt;/s&gt;时间，我选出了终结过渡期的新 ID。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂谈" scheme="https://kwaa.dev/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>Project 1ST - 电子分频耳机 DIY 计划</title>
    <link href="https://kwaa.dev/p/project-1st/"/>
    <id>https://kwaa.dev/p/project-1st/</id>
    <published>2020-06-09T21:00:00.000Z</published>
    <updated>2020-06-30T05:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 class="mdui-valign" id="设计-2020-01"><span>设计 2020.01 ~&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#设计-2020-01"><i class="mdui-icon material-icons">link</i></a></h2><p>对，我在 Project AXE 被击坠的那段时间有了现在你看到这些东西的想法。</p><p>Project 1ST 是由一对六单元耳机头，两条 2.5mm TRRS 对录线和一个普通便携耳放大小的数字信号处理器组成的有源电子分频耳机系统。这个耳机系统不涉及数模转换部分。</p><a id="more"></a><h3 class="mdui-valign" id="耳机，接口和线材"><span>耳机，接口和线材&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#耳机，接口和线材"><i class="mdui-icon material-icons">link</i></a></h3><p>耳机不内置<strong>普通</strong>的功率分频器，直连2.5mm母座；<br>腔体使用透明光固化树脂公模，具备异形 PCB 面板和金属出音嘴。<br>（PCB 正面焊盘方便焊接，背面阻焊/焊盘图案算是客制项目之一）</p><p>耳机部分我取名为IVX，没有理由。</p><blockquote><p>IEM-IVX「MASTER」6单元 3分频 3导管</p></blockquote><ul><li>38D1XJ007Mi/8a(并联) - 2mm*12mm导音管</li><li>33AP007(并联) - 2mm*12mm导音管</li><li>2389D(半线圈并联) - 2mm*12mm导音管</li></ul><p>模拟信号接口使用 2.5mm TRRS 单输入双输出，另外提供一个 3.5mm TRS 输入。电源开关/交叉反馈开关和音量旋钮。</p><p>线材也就是两条编在一起而已，用料暂定 Sommer Cicada 4芯 1.5米。</p><p>大概像是这样：</p><figure class="mdui-img-fluid"><img src="https://cdn.jsdelivr.net/gh/kwaa/kwaa.github.io/source/_posts/project-1st/demo.png" alt="demo"class="mdui-img-rounded" loading="lazy"></figure><p>2.5mm 插针定义：</p><figure class="mdui-img-fluid"><img src="https://cdn.jsdelivr.net/gh/kwaa/kwaa.github.io/source/_posts/project-1st/trrs.png" alt="trrs"class="mdui-img-rounded" loading="lazy"></figure><h3 class="mdui-valign" id="模拟信号处理器"><span>模拟信号处理器&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#模拟信号处理器"><i class="mdui-icon material-icons">link</i></a></h3><blockquote><p>ASP-NE0「MIXER」</p></blockquote><p>这套耳机系统的灵魂也是最麻烦的部分，做这个我觉得有必要使用一部分洞洞板。</p><p>交叉反馈、分频点和EQ（如果有）完全根据耳机设计，以实现最佳效果。</p><p>仿照 Orion ASP 画的 Function Block Diagram，随进度更新：</p><figure class="mdui-img-fluid"><img src="https://cdn.jsdelivr.net/gh/kwaa/kwaa.github.io/source/_posts/project-1st/diagram.png" alt="diagram"class="mdui-img-rounded" loading="lazy"></figure><h4 id="IB-输入缓冲">IB - 输入缓冲</h4><p>没想好</p><h4 id="VC-音量控制">VC - 音量控制</h4><p>没想好，暂定 PGA4311？</p><h4 id="XF-交叉反馈">XF - 交叉反馈</h4><p>不太了解，但我想试试！<br>拥有不同的听感不是很棒吗？反正可以手动开关。</p><h4 id="LR-三路分频">LR - 三路分频</h4><p>作为一个 Linkwitz 信徒，我当然会选择四阶 Linkwitz-Riley 滤波器。</p><p>打算耳机原型做好以后用 Equalizer APO，foobar2000 和 <a href="http://xover.sourceforge.net/">foo_dsp_xover</a> 插件先决定好分频点，再根据分频点设计 PCB。</p><p>电路直接搬 TI 参考设计 <a href="http://www.ti.com/lit/ug/tidu035/tidu035.pdf">TIDU035</a>，用 OPA1604 运放。</p><h4 id="AMP-功率放大">AMP - 功率放大</h4><p>耳放部分我给起了一个好听的名字—— Mori 森</p><p>众木成森，它专为多声道/低功耗设计（实际上也是搬的 TI 参考设计，稍作修改）；一片 INA1620 并联接一端输出。</p><p>这次是三分频六声道，所以也就叫 Mori 2X6。</p><p>这个放大器为 1ST 耳机系统专用，所以不需要额外的增益开关。</p><h4 id="POWER-电源">POWER - 电源</h4><p>出于省事，我打算用二或四块 9V 电池供电，并联成 ±9V。<br>这样也不用考虑充电了，简洁万岁！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;设计-2020-01&quot;&gt;设计 2020.01 ~&lt;/h2&gt;
&lt;p&gt;对，我在 Project AXE 被击坠的那段时间有了现在你看到这些东西的想法。&lt;/p&gt;
&lt;p&gt;Project 1ST 是由一对六单元耳机头，两条 2.5mm TRRS 对录线和一个普通便携耳放大小的数字信号处理器组成的有源电子分频耳机系统。这个耳机系统不涉及数模转换部分。&lt;/p&gt;
    
    </summary>
    
    
      <category term="音频" scheme="https://kwaa.dev/categories/%E9%9F%B3%E9%A2%91/"/>
    
    
      <category term="DIY" scheme="https://kwaa.dev/tags/DIY/"/>
    
      <category term="IEM" scheme="https://kwaa.dev/tags/IEM/"/>
    
      <category term="入耳式耳机" scheme="https://kwaa.dev/tags/%E5%85%A5%E8%80%B3%E5%BC%8F%E8%80%B3%E6%9C%BA/"/>
    
      <category term="模拟信号处理器" scheme="https://kwaa.dev/tags/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>白日梦</title>
    <link href="https://kwaa.dev/p/daydream/"/>
    <id>https://kwaa.dev/p/daydream/</id>
    <published>2020-06-07T20:00:00.000Z</published>
    <updated>2020-11-29T21:42:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>我总是有那么些想要又买不起的玩意，不定期记录在这个页面里；当我不想要或者真的买了，它会被划上删除线。</p><a id="more"></a><h2 class="mdui-valign" id="STAX-SR-009S-DIY-MINI-T2"><span>STAX SR-009S + DIY MINI T2&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#STAX-SR-009S-DIY-MINI-T2"><i class="mdui-icon material-icons">link</i></a></h2><p>要做关于静电耳机的白日梦，有且仅有的选项就是 STAX。</p><h2 class="mdui-valign" id="Linkwitz-LX521-4"><span>Linkwitz LX521.4&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Linkwitz-LX521-4"><i class="mdui-icon material-icons">link</i></a></h2><p>我很欣赏 Siegfried Linkwitz 的设计，但并没有钱购买那两对 SEAS L26RO4Y。</p><h2 class="mdui-valign" id="Valve-Index-3-Vive-Tracker"><span>Valve Index + 3*Vive Tracker&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Valve-Index-3-Vive-Tracker"><i class="mdui-icon material-icons">link</i></a></h2><p>谁能拒绝一套 VR 设备呢？特别是当你能自己扮纸片人老婆的时候。</p><h2 class="mdui-valign" id="ASN-IPv6-44-IPv4-24"><span>ASN &gt; IPv6/44 &gt; IPv4/24&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#ASN-IPv6-44-IPv4-24"><i class="mdui-icon material-icons">link</i></a></h2><p>拥有自己的 ASN 和 IP 是不是很酷？目前卡在 ASN 注册（不想实名上网又没路子注册皮包公司）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我总是有那么些想要又买不起的玩意，不定期记录在这个页面里；当我不想要或者真的买了，它会被划上删除线。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂谈" scheme="https://kwaa.dev/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>入耳式耳机随想</title>
    <link href="https://kwaa.dev/p/iem-idea/"/>
    <id>https://kwaa.dev/p/iem-idea/</id>
    <published>2020-06-07T19:00:00.000Z</published>
    <updated>2020-08-27T16:35:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>我把所有的入耳式耳机想法都放在这里，已经实现或正在实际制作的会单独写一篇文章；在这里公开的方案无论是否制作过我都不为实际效果背书。<strong>特别是未实践/早期设计</strong><br>为什么想法这么多却没几个实际动手的？因为没钱。</p><a id="more"></a><h2 class="mdui-valign" id="Project-AXE-IEM-AXE「AXE」测试中"><span>Project AXE | IEM-AXE「AXE」测试中&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Project-AXE-IEM-AXE「AXE」测试中"><i class="mdui-icon material-icons">link</i></a></h2><blockquote><p>史诗巨坑，绝赞制作中 2019.07</p></blockquote><p>DIY 耳机的第一步。<a href="https://kwaa.dev/p/project-axe/">Project AXE - 旗舰耳机 DIY 计划</a></p><h2 class="mdui-valign" id="Project-1ST-IEM-IVX「MASTER」构思中"><span>Project 1ST | IEM-IVX「MASTER」构思中&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Project-1ST-IEM-IVX「MASTER」构思中"><i class="mdui-icon material-icons">link</i></a></h2><blockquote><p>终极天坑，停留在想法 2020.01</p></blockquote><p>我总是要给自己找麻烦。<a href="https://kwaa.dev/p/project-1st">Project 1ST - 电子分频耳机 DIY 计划</a></p><h2 class="mdui-valign" id="IEM-BA4「BASIS」未实践"><span>IEM-BA4「BASIS」未实践&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#IEM-BA4「BASIS」未实践"><i class="mdui-icon material-icons">link</i></a></h2><blockquote><p>烂大街单元 + 独特分频</p></blockquote><p>想设计一个成本500以内又方便买材料的四单元耳机，于是就有了这玩意。</p><p>单边由两个串联 CI-22955 和两个串联 ED-29689 组合，组成四单元双分频双导管。特别在哪里呢？高低频单元都各有一个是半线圈。</p><p>由于现在没有闲钱，所以暂时不会进行后续调试。</p><blockquote><p>IEM-BA4（早期设计）4单元 2分频 2导管</p></blockquote><ul><li>22955 + 22955(串联, 半线圈) - 串20Ω, 并10uF - 并管绿阻 - 15mm导管/2mmID</li><li>29689 + 29689(串联, 半线圈) - 串10uF - 并管白阻 - 10mm导管/2mmID</li></ul><h2 class="mdui-valign" id="IEM-UN1「UNIVERSAL」已完成-已废弃"><span>IEM-UN1「UNIVERSAL」已完成/已废弃&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#IEM-UN1「UNIVERSAL」已完成-已废弃"><i class="mdui-icon material-icons">link</i></a></h2><blockquote><p>由于缺乏乐趣<s>市面上太多同类</s>，此方案不再更新。</p></blockquote><p>2354 便宜了不少，很适合设计新的单动铁。作为我眼里最合适的全频单元，<s>或许以后设计 Project 2ND（如果有）的时候也会用到它。</s> 没有 Project 2ND 了</p><p>无趣的同时它好做并且声音不差。</p><blockquote><p>IEM-UN1（最终设计）1单元 1分频 1导管</p></blockquote><ul><li>2354 - 串39Ω - 棕阻 - 12mm导管/2mmID</li></ul><h2 class="mdui-valign" id="IEM-BLOOM「BLOOM」构思中"><span>IEM-BLOOM「BLOOM」构思中&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#IEM-BLOOM「BLOOM」构思中"><i class="mdui-icon material-icons">link</i></a></h2><blockquote><p>现代日呆耳机</p></blockquote><p>大多数时候我都是只想不做，这玩意大概也是一样。</p><p>BLOOM 的设计需求是 Galgame / Anisong 专精，所以你可以在它身上找到 334 和 CK100 的一些影子。命名和点兔第三季巧合的重复了，不过我本意是 BLOOM (全屏泛光) 后处理；这也算一种歪打正着吧，毕竟将来测试这玩意的时候肯定会用到点兔角色歌 CD。</p><p>低频使用了我喜欢的 38D1XJ007Mi，另设低频衰减开关；中频则为 33AP007。高频使用 30017 和 23991 并联得到中高频 FK 和极高频 WBFK 各两个。30017 和 23991 并联来自 <a href="https://www.head-fi.org/threads/home-made-iems.430688/post-15081696">dhruvmeena96</a> 的想法，借此获得 20Ω FK / 10Ω WBFK 的直流阻抗。</p><p>依然是没钱做不出来，以后再说了。这玩意成本确实高了点，<s>以后我可能会再搞一个三单元低配版</s> 参见 IEM-MIDORI。</p><p>虽然 30017 容易搞出相位问题，但我就是想试试。之前无意中翻到了说是改进版的 31082，不过只有两根线就没什么意思了。</p><p>以 2020 年中旬的淘宝价格，BLOOM 八单元版动铁成本约为 1000 元，十二单元版约为 1500 元。</p><blockquote><p>IEM-BLOOM_VIII (早期设计) 8单元 4分频 3导管</p></blockquote><ul><li>38D1XJ007Mi/8a(并联) - 没想好 - 并管绿阻 - 15mm导管/2mmID</li><li>33AP007(并联) - 并管绿阻 - 15mm导管/2mmID</li><li>TWFK-23991(和30017并联) - FK串22uF - WBFK串470nF - 灰阻 - 15mm导管/2mmID</li><li>TWFK-30017(和23991并联) - FK串22uF - WBFK串470nF - 白阻 - 10mm导管/2mmID</li></ul><p>还可以堆单元数量，像这样：</p><blockquote><p>IEM-BLOOM_XII（早期设计）12单元 4分频 3导管</p></blockquote><ul><li>38D1XJ007Mi/8a(并联) - 没想好 - 并管绿阻 - 15mm导管/2mmID</li><li>33AP007(并联) - 并管绿阻 - 15mm导管/2mmID</li><li>TWFK-23991*2(并联, 和30017并联) - FK串22uF - WBFK串470nF - 灰阻 - 15mm导管/2mmID</li><li>TWFK-30017*2(并联, 和23991并联) - FK串22uF - WBFK串470nF - 白阻 - 10mm导管/2mmID</li></ul><h2 class="mdui-valign" id="IEM-MIDORI「翠」构思中"><span>IEM-MIDORI「翠」构思中&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#IEM-MIDORI「翠」构思中"><i class="mdui-icon material-icons">link</i></a></h2><blockquote><p>恶意的政治隐喻</p></blockquote><p>上面（IEM-BLOOM）说的三单元低配 HUFI 特化型耳机。第一个汉字命名！<br>为什么叫翠呢？首先是形容它的目标以人声华丽为主；其次是我 2016 年以来一直在祈翠，以这个名字作为一种精神寄托。在这里顺便说一下取名规范吧：</p><div class="mdui-table-fluid mdui-shadow-0"><table class="mdui-table mdui-table-hoverable"><thead><tr><th>姓</th><th>名</th><th>字</th></tr></thead><tbody><tr><td>IEM</td><td>MIDORI</td><td>「翠」</td></tr><tr><td>IEM</td><td>AXE</td><td>「AXE」</td></tr></tbody></table></div><p>基本思路是延续 CK100 的分频，替换一个更好的低频单元（就是你了，2354！）。原版低频单元 TEC-30033 并没有分频（大概止于 8kHz），这里尝试将 2354 串电阻并电容来压高频。</p><p>以 2020 年中旬的淘宝价格，MIDORI 动铁成本约为 300 元。由于我手里有一对剩下的 30017（Project AXE 剩下来的），所以只需要搞定外壳再买一对 2354 就可以开工了。</p><p>虽然以 CK100 分频为基础，但我并不想做一个解析强化版 CK100… 主要原因是做不成，毕竟单元都换了。</p><blockquote><p>IEM-MIDORI（早期设计）3单元 3分频 2导管</p></blockquote><ul><li>2354 - 串4.7Ω - 并10uF - 绿阻 - 10mm导管/2mmID</li><li>TWFK-30017 - FK串22uF - WBFK串0.47uF - 白阻 - 10mm导管/2mmID</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我把所有的入耳式耳机想法都放在这里，已经实现或正在实际制作的会单独写一篇文章；在这里公开的方案无论是否制作过我都不为实际效果背书。&lt;strong&gt;特别是未实践/早期设计&lt;/strong&gt;&lt;br&gt;
为什么想法这么多却没几个实际动手的？因为没钱。&lt;/p&gt;
    
    </summary>
    
    
      <category term="音频" scheme="https://kwaa.dev/categories/%E9%9F%B3%E9%A2%91/"/>
    
    
      <category term="DIY" scheme="https://kwaa.dev/tags/DIY/"/>
    
      <category term="IEM" scheme="https://kwaa.dev/tags/IEM/"/>
    
      <category term="入耳式耳机" scheme="https://kwaa.dev/tags/%E5%85%A5%E8%80%B3%E5%BC%8F%E8%80%B3%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Project AXE - 旗舰耳机 DIY 计划</title>
    <link href="https://kwaa.dev/p/project-axe/"/>
    <id>https://kwaa.dev/p/project-axe/</id>
    <published>2020-04-07T20:20:00.000Z</published>
    <updated>2020-09-03T23:54:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知，21 世纪的旗舰 IEM 相当昂贵。</p><p>我既想拥有一个旗舰 IEM 又认为市售品比起 STAX SR-009S、Abyss 1266 之类的大耳来说溢价过高，就产生了自己设计一个的想法。</p><a id="more"></a><p>既然是旗舰级，那当然要十单元！静电！<br>(Balanced)Armature, Electrostatic, X(10)；干脆就叫 AXE 好了。</p><p>但是去年的我并不知道，这个玩意会拖了快一年时间还没完成；并且足足让我花了四五千（单元 + 工具）。</p><h2 class="mdui-valign" id="原型-2019-07"><span>原型 2019.07 ~&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#原型-2019-07"><i class="mdui-icon material-icons">link</i></a></h2><p>Project AXE 最初方案基本照搬 <a href="https://www.head-fi.org/threads/home-made-iems.430688/post-15070746">dhruvmeena96 的设计</a>，做了一些小修改和额外加了一个 30017 用来实现类似 CK100 的音染。</p><blockquote><p>IEM-AXE (ver2019.8) 10单元 5分频 3导管</p></blockquote><ul><li>38D1XJ007Mi(串联) - L-pad(4.7Ω, 4.7Ω) - 并管黄阻尼(4700)</li><li>33AJ007i(串联) - 串47Ω - 并15uF - 并管黄阻尼(4700)</li><li>2389D(半线圈并联) - 串2.2uF - 棕阻尼(1000)</li><li>EST65DA01(并联) - 串470nF - 并管灰阻尼(320)</li><li>30017 - 中频串2.2uF - 高频串470nF - 并管灰阻尼(320)</li></ul><p>去年的我画不好分频，焊出来声音有问题然后被人咕了。</p><p>之后又摸了半年（直到有钱把工具买齐为止），L-pad 在第一次测试中不可用，我打算修改到一般的低频电阻。</p><p>在这期间某宝也能买到 EST65QB02 了，2020 年的 AXE 设计去掉了 30017 并把静电单元改为 EST65QB02，但我并没有钱买新的静电单元(一个七百多呢) 原型只好继续用 EST65DA01，也就是八单元。</p><h2 class="mdui-valign" id="新生-2020-05"><span>新生 2020.05 ~&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#新生-2020-05"><i class="mdui-icon material-icons">link</i></a></h2><p>到这里旧 AXE 和新 AXE 已经不是一个东西了。<br>我目前更倾向于先把旧 AXE 做完自用，满足我对旗舰入耳式耳机的需求；新 AXE 考虑到预算不足暂且搁置。<br><a href="https://kwaa.dev/p/project-axe-p8">一年后的成果：STREIN IEM-AXE_P8</a></p><p>IEM-AXE ver2020.9 将中低频改回了并联，并用 RC 低通替代了 L-pad。</p><blockquote><p>IEM-AXE (ver2020.9) 10单元 4分频 3导管</p></blockquote><ul><li>38D1XJ007Mi(并联) - RC低通(串100Ω, 并100uF) - 并管黄阻尼(4700)</li><li>33AJ007i(并联) - 并管黄阻尼(4700)</li><li>2389D(半线圈并联) - 串2.2uF - 绿阻尼(1500)</li><li>EST65QB02(并联) - 串470nF - 白阻尼(680)</li></ul><p>作为旗舰规格自然要带一个开关，用来调整低频：</p><ul><li>BASS-LIGHT (IEM-AXE_BL, 参考 <a href="https://github.com/jaakkopasanen/AutoEq/blob/master/compensation/harman_in-ear_2019v2_wo_bass.png">Harman IE Target 2019 without bass</a>)</li><li>BASS-HEAVY (IEM-AXE_BH, 参考 <a href="https://github.com/jaakkopasanen/AutoEq/blob/master/compensation/harman_in-ear_2019v2.png">Harman IE Target 2019</a>)</li></ul><h2 class="mdui-valign" id="外观"><span>外观&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#外观"><i class="mdui-icon material-icons">link</i></a></h2><p><s>面板打算使用某宝买的银箔碎碳板，配正反 STREIN 金属贴；<br>腔体透黑+金属出音嘴，这个还是等样品做完之后放成品图吧。</s> 参见 IEM-AXE_P8</p><h2 class="mdui-valign" id="总结"><span>总结&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#总结"><i class="mdui-icon material-icons">link</i></a></h2><p>还没做完怎么就总结了呢？总之我想到什么说什么了。</p><ul><li>首先，找人帮忙的时候绝对要做好被咕的准备。</li><li>其次，直接挑战旗舰是不明智的。</li></ul><p>最后是我为了这个计划买的工具：</p><ul><li>万用表 优利德UT61E ￥270</li><li>电烙铁 二手晨美数显T12焊台 ￥150</li><li>人工耳 小黑IEC711仿真耳 带底座精密版本+声卡 ￥1000</li><li>固化灯 36W镇流器版加强灯+四支LED套装 ￥270</li><li>打磨机 世新204+102L ￥250</li></ul><p>工具两千左右，单元和其他材料大概有三千。</p><p>惨痛的教训：没钱就不要尝试做多动铁耳机！但我买都买了，也只好忍痛做完。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;众所周知，21 世纪的旗舰 IEM 相当昂贵。&lt;/p&gt;
&lt;p&gt;我既想拥有一个旗舰 IEM 又认为市售品比起 STAX SR-009S、Abyss 1266 之类的大耳来说溢价过高，就产生了自己设计一个的想法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="音频" scheme="https://kwaa.dev/categories/%E9%9F%B3%E9%A2%91/"/>
    
    
      <category term="DIY" scheme="https://kwaa.dev/tags/DIY/"/>
    
      <category term="IEM" scheme="https://kwaa.dev/tags/IEM/"/>
    
      <category term="入耳式耳机" scheme="https://kwaa.dev/tags/%E5%85%A5%E8%80%B3%E5%BC%8F%E8%80%B3%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>S3RVER - 使用 Arch Linux 的 ALL-IN-ONE 服务器</title>
    <link href="https://kwaa.dev/p/s3rver/"/>
    <id>https://kwaa.dev/p/s3rver/</id>
    <published>2020-02-02T20:20:00.000Z</published>
    <updated>2020-02-23T10:10:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>新的一年我终于有预算在家里摆一小只服务器了。</p><a id="more"></a><p>继 1OCALHOST(平板/笔记本) 和 COMPUTE2(台式机) 后，这是我现有的第三个机器；就叫它S3RVER吧。</p><h2 class="mdui-valign" id="需求和配置选择"><span>需求和配置选择&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#需求和配置选择"><i class="mdui-icon material-icons">link</i></a></h2><p>我全都要！不太贵，低功耗，小巧；高性能（相对NAS常用的赛扬奔腾来说）。<br>最后选择了R5-2400GE：这是R5-2400G的低功耗版，只有35W TDP。<s>AMD yes</s></p><div class="mdui-table-fluid mdui-shadow-0"><table class="mdui-table mdui-table-hoverable"><thead><tr><th>合计</th><th>2440</th></tr></thead><tbody><tr><td>二手 R5-2400GE 准系统</td><td>1300</td></tr><tr><td>镁光 16G DDR4-3200 内存条</td><td>420</td></tr><tr><td>三星 256G PM981a 固态盘</td><td>300</td></tr><tr><td>西数 2T WD20SPZX 机械盘</td><td>420</td></tr></tbody></table></div><h2 class="mdui-valign" id="系统安装"><span>系统安装&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#系统安装"><i class="mdui-icon material-icons">link</i></a></h2><p>我最喜欢的 Arch，装了好几次已经轻车熟路了。<br>之前用的都是 EXT4，这次试一试 btrfs</p><div class="mdui-table-fluid mdui-shadow-0"><table class="mdui-table mdui-table-hoverable"><thead><tr><th>分区方案</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>/dev/nvme0n1p1</td><td>512M</td><td>/boot</td><td>fat32</td></tr><tr><td>/dev/nvme0n1p2</td><td>238G</td><td>/</td><td>btrfs</td></tr><tr><td>/dev/sda1</td><td>1.8T</td><td>/home</td><td>btrfs</td></tr></tbody></table></div><p>用cfdisk分区，然后格式化并创建子卷：</p><pre class="language-bash" data-language="bash"><code class="language-bash">mkfs.fat -F32 /dev/nvme0n1p1mkfs.btrfs -f /dev/nvme0n1p2mkfs.btrfs -f /dev/sda1<span class="token function">mount</span> /dev/nvme0n1p2 /mnt<span class="token builtin class-name">cd</span> /mntbtrfs subvol create rootfs<span class="token function">mkdir</span> -p /mnt/home<span class="token function">mount</span> /dev/sda1 /mnt/home<span class="token builtin class-name">cd</span> /mnt/homebtrfs subvol create homefs</code></pre><p>接下来挂载子卷：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~<span class="token function">umount</span> /dev/sda1<span class="token function">umount</span> /dev/nvme0n1p2<span class="token function">mount</span> /dev/nvme0n1p2 /mnt -o <span class="token assign-left variable">subvol</span><span class="token operator">=</span>rootfs,compress<span class="token operator">=</span>lzo,noatime,discard,ssd,space_cache<span class="token function">mkdir</span> -p /mnt/home<span class="token function">mount</span> /dev/sda1 /mnt/home -o <span class="token assign-left variable">subvol</span><span class="token operator">=</span>homefs,compress-force<span class="token operator">=</span>lzo,noatime,autodefrag,space_cache<span class="token function">mkdir</span> -p /mnt/boot<span class="token function">mount</span> /dev/nvme0n1p1 /mnt/boot</code></pre><p>修改mirrorlist，安装系统和生成fstab：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">nano</span> /etc/pacman.d/mirrorlist <span class="token comment">#我就是喜欢用nano</span>pacman -Syypacman -S archlinux-keyringpacstrap -i /mnt base base-devel linux linux-firmwaregenfstab -U /mnt <span class="token operator">>></span> /mnt/etc/fstab<span class="token function">cat</span> /mnt/etc/fstab</code></pre><p>用arch-chroot进入安装好的系统，安装grub：</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S dosfstools grub efibootmgrgrub-install --target<span class="token operator">=</span>x86_64-efi --efi-directory<span class="token operator">=</span>/boot --bootloader-id<span class="token operator">=</span>arch --recheck<span class="token function">grub-mkconfig</span> -o /boot/grub/grub.cfg</code></pre><p>安装部分就告一段落了，装个neofetch作为尾声。</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S neofetchneofetch</code></pre><h2 class="mdui-valign" id="其他配置"><span>其他配置&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#其他配置"><i class="mdui-icon material-icons">link</i></a></h2><pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S ufw fail2ban <span class="token comment">#防火墙</span>pacman -S <span class="token function">zsh</span> grml-zsh-config <span class="token comment">#zsh&amp;配置</span><span class="token function">useradd</span> -m -g wheel -s <span class="token function">zsh</span> b917 <span class="token comment">#添加用户</span><span class="token function">passwd</span> b917 <span class="token comment">#设置用户密码</span></code></pre><h3 class="mdui-valign" id="AUR-助手"><span>AUR 助手&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#AUR-助手"><i class="mdui-icon material-icons">link</i></a></h3><p>说到 Arch 的优点，当然少不了 AUR；<br>这里我选择了自己常用的yay。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /tmp<span class="token function">git</span> clone https://aur.archlinux.org/yay.git<span class="token builtin class-name">cd</span> yaymakepkg -si</code></pre><h3 class="mdui-valign" id="proxychains-ng"><span>proxychains-ng&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#proxychains-ng"><i class="mdui-icon material-icons">link</i></a></h3><p>活在墙国，免不了要使用代理：我直接设置成台式机的 v2ray SOCKS 端口。</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S proxychains-ng<span class="token function">nano</span> /etc/proxychains.conf</code></pre><h3 class="mdui-valign" id="Docker-Portainer"><span>Docker&amp;Portainer&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Docker-Portainer"><i class="mdui-icon material-icons">link</i></a></h3><p>这次的核心就是 Docker，我会把大多数服务都放进 Docker里运行。Portainer 是 Docker 的图形化管理界面，我用官方文档的方式安装 Portainer，并修改为44301端口。</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S dockersystemctl start dockersystemctl <span class="token builtin class-name">enable</span> dockerdocker pull portainer/portainerdocker volume create portainer_datadocker run -d -p <span class="token number">44300</span>:8000 -p <span class="token number">44301</span>:9000 --name<span class="token operator">=</span>portainer --restart<span class="token operator">=</span>always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer</code></pre><h2 class="mdui-valign" id="安装在系统的服务"><span>安装在系统的服务&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#安装在系统的服务"><i class="mdui-icon material-icons">link</i></a></h2><h3 class="mdui-valign" id="Samba"><span>Samba&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#Samba"><i class="mdui-icon material-icons">link</i></a></h3><blockquote><p>Samba 是 SMB/CIFS 网络协议的重新实现，可以在 Linux 和 Windows 系统间进行文件，打印机共享。</p></blockquote><p>Samba 我用来做什么？当然是放 Steam 游戏！自己电脑的1T机械盘已经快满了。我设置为分享 /home 目录，也就是整个 WD20SPZX。</p><pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S samba <span class="token comment">#安装 Samba</span><span class="token function">nano</span> /etc/samba/smb.conf <span class="token comment">#配置 smb.conf</span>smbpasswd -a b917 <span class="token comment">#创建用户</span>systmctl start smb nmb <span class="token comment">#启动服务</span>systemctl <span class="token builtin class-name">enable</span> smb nmb <span class="token comment">#激活开机自启</span></code></pre><p>我的 smb.conf 配置：</p><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token selector">[global]</span><span class="token constant">    workgroup</span> <span class="token attr-value"><span class="token punctuation">=</span> WORKGROUP</span>    server string <span class="token attr-value"><span class="token punctuation">=</span> S3RVER Samba %v</span>    netbios name <span class="token attr-value"><span class="token punctuation">=</span> S3RVER</span>    log file <span class="token attr-value"><span class="token punctuation">=</span> /var/log/samba/%m.log</span>    log level <span class="token attr-value"><span class="token punctuation">=</span> 3</span>    max log size <span class="token attr-value"><span class="token punctuation">=</span> 50</span><span class="token constant">    security</span> <span class="token attr-value"><span class="token punctuation">=</span> user</span>    passdb backend <span class="token attr-value"><span class="token punctuation">=</span> tdbsam</span><span class="token selector">[home]</span><span class="token constant">    comment</span> <span class="token attr-value"><span class="token punctuation">=</span> Linux home</span><span class="token constant">    path</span> <span class="token attr-value"><span class="token punctuation">=</span> /home</span><span class="token constant">    public</span> <span class="token attr-value"><span class="token punctuation">=</span> yes</span><span class="token constant">    writable</span> <span class="token attr-value"><span class="token punctuation">=</span> yes</span><span class="token constant">    printable</span> <span class="token attr-value"><span class="token punctuation">=</span> no</span>    valid users <span class="token attr-value"><span class="token punctuation">=</span> b917</span></code></pre><h2 class="mdui-valign" id="安装在-Docker-的服务"><span>安装在 Docker 的服务&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#安装在-Docker-的服务"><i class="mdui-icon material-icons">link</i></a></h2><h3 class="mdui-valign" id="joshava-cloudflare-ddns"><span>joshava/cloudflare-ddns&nbsp;&nbsp;</span><a aria-hidden="true" class="mdui-btn mdui-btn-icon mdui-ripple" href="#joshava-cloudflare-ddns"><i class="mdui-icon material-icons">link</i></a></h3><p>本来路由器一直挂着 <a href="http://No-IP.com">No-IP.com</a> 的 DDNS，不过域名实在不怎么好看。正好现在有一台 24 小时开机的设备了，就试试 Cloudflare DDNS。</p><p>使用之前要先在 Cloudflare - My Profile - API Tokens 创建一个新的 Token，点击 Start with a template 后选择 Edit zone DNS 并设置域名即可。</p><pre class="language-bash" data-language="bash"><code class="language-bash">docker pull joshava/cloudflare-ddns<span class="token function">touch</span> /home/b917/ddns-config.yaml <span class="token comment">#创建配置文件</span><span class="token function">nano</span> /home/b917/ddns-config.yaml <span class="token comment">#编辑配置文件</span>docker run -d -v /home/b917/ddns-config.yaml:/app/config.yaml hoshava/cloudflare-ddns</code></pre><p>config.yaml的示例：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">auth</span><span class="token punctuation">:</span>    <span class="token key atrule">scopedToken</span><span class="token punctuation">:</span> token<span class="token punctuation">-</span>input<span class="token punctuation">-</span>here<span class="token key atrule">domains</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> foo.example.com    <span class="token key atrule">type</span><span class="token punctuation">:</span> A    <span class="token key atrule">proxied</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">create</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">zoneId</span><span class="token punctuation">:</span> zoneid<span class="token punctuation">-</span>input<span class="token punctuation">-</span>here</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;新的一年我终于有预算在家里摆一小只服务器了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="https://kwaa.dev/categories/%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="服务器" scheme="https://kwaa.dev/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Arch Linux" scheme="https://kwaa.dev/tags/Arch-Linux/"/>
    
  </entry>
  
  <entry>
    <title>非常简单的Oracle对象存储代理</title>
    <link href="https://kwaa.dev/p/object-storage-workers/"/>
    <id>https://kwaa.dev/p/object-storage-workers/</id>
    <published>2019-11-05T10:10:00.000Z</published>
    <updated>2019-11-05T10:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>目前可以自定域名和省略path，后续打算加入防盗链和自定HTTP头功能。</p><a id="more"></a><p>食用方式：复制下面全部代码丢到Workers里，并修改参数</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"fetch"</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> host <span class="token operator">=</span> <span class="token string">'objectstorage.ap-seoul-1.oraclecloud.com'</span><span class="token punctuation">;</span> <span class="token comment">/* 对象存储的hostname */</span>    <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token string">'/n/xxxxxxxxxxxx/b/standard/o/'</span><span class="token punctuation">;</span> <span class="token comment">/* 对象存储的pathname */</span>    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    url<span class="token punctuation">.</span>hostname <span class="token operator">=</span> host<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>url<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span>pathname <span class="token operator">==</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> status<span class="token operator">:</span> <span class="token number">403</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            url<span class="token punctuation">.</span>pathname <span class="token operator">=</span> path <span class="token operator">+</span> url<span class="token punctuation">.</span>pathname<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>    event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span>        <span class="token function">fetch</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token string">'Access-Control-Allow-Origin'</span><span class="token operator">:</span> <span class="token string">'*'</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目前可以自定域名和省略path，后续打算加入防盗链和自定HTTP头功能。&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://kwaa.dev/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="对象存储" scheme="https://kwaa.dev/tags/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/"/>
    
      <category term="Oracle Cloud" scheme="https://kwaa.dev/tags/Oracle-Cloud/"/>
    
  </entry>
  
</feed>
